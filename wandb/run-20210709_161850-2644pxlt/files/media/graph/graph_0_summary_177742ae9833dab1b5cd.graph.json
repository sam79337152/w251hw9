{"format": "torch", "nodes": [{"name": "module", "id": 140499360005256, "class_name": "ResNet(\n  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\n  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (relu): ReLU(inplace=True)\n  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\n  (layer1): Sequential(\n    (0): BasicBlock(\n      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    )\n    (1): BasicBlock(\n      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    )\n  )\n  (layer2): Sequential(\n    (0): BasicBlock(\n      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (downsample): Sequential(\n        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)\n        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (1): BasicBlock(\n      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    )\n  )\n  (layer3): Sequential(\n    (0): BasicBlock(\n      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (downsample): Sequential(\n        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)\n        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (1): BasicBlock(\n      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    )\n  )\n  (layer4): Sequential(\n    (0): BasicBlock(\n      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (downsample): Sequential(\n        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\n        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (1): BasicBlock(\n      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    )\n  )\n  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\n  (fc): Linear(in_features=512, out_features=1000, bias=True)\n)", "parameters": [["conv1.weight", [64, 3, 7, 7]], ["bn1.weight", [64]], ["bn1.bias", [64]], ["layer1.0.conv1.weight", [64, 64, 3, 3]], ["layer1.0.bn1.weight", [64]], ["layer1.0.bn1.bias", [64]], ["layer1.0.conv2.weight", [64, 64, 3, 3]], ["layer1.0.bn2.weight", [64]], ["layer1.0.bn2.bias", [64]], ["layer1.1.conv1.weight", [64, 64, 3, 3]], ["layer1.1.bn1.weight", [64]], ["layer1.1.bn1.bias", [64]], ["layer1.1.conv2.weight", [64, 64, 3, 3]], ["layer1.1.bn2.weight", [64]], ["layer1.1.bn2.bias", [64]], ["layer2.0.conv1.weight", [128, 64, 3, 3]], ["layer2.0.bn1.weight", [128]], ["layer2.0.bn1.bias", [128]], ["layer2.0.conv2.weight", [128, 128, 3, 3]], ["layer2.0.bn2.weight", [128]], ["layer2.0.bn2.bias", [128]], ["layer2.0.downsample.0.weight", [128, 64, 1, 1]], ["layer2.0.downsample.1.weight", [128]], ["layer2.0.downsample.1.bias", [128]], ["layer2.1.conv1.weight", [128, 128, 3, 3]], ["layer2.1.bn1.weight", [128]], ["layer2.1.bn1.bias", [128]], ["layer2.1.conv2.weight", [128, 128, 3, 3]], ["layer2.1.bn2.weight", [128]], ["layer2.1.bn2.bias", [128]], ["layer3.0.conv1.weight", [256, 128, 3, 3]], ["layer3.0.bn1.weight", [256]], ["layer3.0.bn1.bias", [256]], ["layer3.0.conv2.weight", [256, 256, 3, 3]], ["layer3.0.bn2.weight", [256]], ["layer3.0.bn2.bias", [256]], ["layer3.0.downsample.0.weight", [256, 128, 1, 1]], ["layer3.0.downsample.1.weight", [256]], ["layer3.0.downsample.1.bias", [256]], ["layer3.1.conv1.weight", [256, 256, 3, 3]], ["layer3.1.bn1.weight", [256]], ["layer3.1.bn1.bias", [256]], ["layer3.1.conv2.weight", [256, 256, 3, 3]], ["layer3.1.bn2.weight", [256]], ["layer3.1.bn2.bias", [256]], ["layer4.0.conv1.weight", [512, 256, 3, 3]], ["layer4.0.bn1.weight", [512]], ["layer4.0.bn1.bias", [512]], ["layer4.0.conv2.weight", [512, 512, 3, 3]], ["layer4.0.bn2.weight", [512]], ["layer4.0.bn2.bias", [512]], ["layer4.0.downsample.0.weight", [512, 256, 1, 1]], ["layer4.0.downsample.1.weight", [512]], ["layer4.0.downsample.1.bias", [512]], ["layer4.1.conv1.weight", [512, 512, 3, 3]], ["layer4.1.bn1.weight", [512]], ["layer4.1.bn1.bias", [512]], ["layer4.1.conv2.weight", [512, 512, 3, 3]], ["layer4.1.bn2.weight", [512]], ["layer4.1.bn2.bias", [512]], ["fc.weight", [1000, 512]], ["fc.bias", [1000]]], "output_shape": [[128, 1000]], "num_parameters": [9408, 64, 64, 36864, 64, 64, 36864, 64, 64, 36864, 64, 64, 36864, 64, 64, 73728, 128, 128, 147456, 128, 128, 8192, 128, 128, 147456, 128, 128, 147456, 128, 128, 294912, 256, 256, 589824, 256, 256, 32768, 256, 256, 589824, 256, 256, 589824, 256, 256, 1179648, 512, 512, 2359296, 512, 512, 131072, 512, 512, 2359296, 512, 512, 2359296, 512, 512, 512000, 1000]}], "edges": []}